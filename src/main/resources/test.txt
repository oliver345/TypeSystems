B=S (K S) K;
C=S (S (K B) S) (K K);
LE=Rec (K True) (K (S (K (Rec False))(S (K K))));
INSERT=S (B RecList (C Cons [])) (C (B S (B (B C) (B (B (B B)) (S (B S (B (B B) (B (B ITE) LE))) (C (B B (B B Cons)) Cons))))) Cons);
INSERT 4 [2,2,2];
INSERTION_SORT=RecList [] (S (K K) INSERT);
ADD=C Rec (K Succ);
MUL=B (Rec ZERO) ((B K) ADD);
FAC=((Rec (Succ ZERO)) ((B MUL) Succ));
CASE=C (B B Rec) (B K);
ITER=C (B B Rec) K;
LE_ITER=ITER (K True) (CASE False);
AND=C (B C ITE) False;
OR=C ITE True;
listSize=RecList ZERO (B (K (K Succ)) I);
isZERO=Rec True (K (K False));
isZERO 0;
isZERO 5;
[];
[1,2,3,4];
[ 1,2 ,3, 4 ];
[      1 ,      2      ,3,4    ];
[1,2,3,4]:List{Nat};
([1,2,3,4]):List{Nat};
([]):List{Nat};
[]:List{Nat};
listSize [1,2,3,4];
listSize [1,2,3,4]:List{Nat};
listSize ([1,2,3,4]):List{Nat};
listSize ([]):List{Nat};
listSize []:List{Nat};
RecList{Nat}{Nat} ZERO (B (K (K Succ)) I) [];
RecList{Nat}{Nat} ZERO (B (K (K Succ)) I) []:List{Nat};
RecList{Nat}{Nat} ZERO (B (K (K Succ)) I) ([]):List{Nat};
[[0,ZERO],[ZERO,0]];
listSize [[0,0],[0,0]];
Cons ZERO [];
[Cons ZERO [],[ZERO,ZERO]];
[[Succ ZERO],[ZERO, ZERO]];
[[I True],[False, True]];
listSize [[1,1,1], INSERT 4 [2,2,2], [3,3,3]];
listSize [(Succ 3), (listSize [1,2,3]), (Succ 4)];
INSERTION_SORT [1,2,3,4];
INSERTION_SORT [4,3,2,1];
FAC 4;
I True;
I{Bool} True;
K True False;
K{Bool}{Bool} False True;
S K I True;
S{}{}{} K I False;
Rec ZERO K 5;
Rec{Nat} ZERO K 5;